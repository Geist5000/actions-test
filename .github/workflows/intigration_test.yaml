
name: backend_test
on:
  push:

env:
  DB_PASSWORD: 'super_secret_password'


jobs:
  cypress-run:
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_DATABASE: toolbox
          MYSQL_ROOT_PASSWORD: '${{env.DB_PASSWORD}}'
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'ricom/toolbox-backend'
          path: 'backend'
      - uses: actions/checkout@v3
        with:
          repository: 'ricom/toolbox-frontend'
          ref: 'feature/testing'
          path: 'frontend'
      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
      - name: Composer (php-actions)
        uses: php-actions/composer@v6
        with:
          version: 2
          working_dir: 'backend'
      - name: setup backend
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          APP_ENV: production
          APP_URL: http://localhost:8000
          APP_DEBUG: false
          FRONTEND_URL: http://localhost:3000
        working-directory: backend
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan migrate --seed
          php artisan passport:install > passport_keys.log
          key=$(tail -n 1 passport_keys.log | perl -lne 'print $1 if /^.*: (.*)$/')
          echo "CLIENT_SECRET=$key" >> $GITHUB_ENV
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
      - name: remove dev dependencies
        uses: php-actions/composer@v6
        with:
          dev: 'no'
          version: 2
          args: '--optimize-autoloader'
          working_dir: 'backend'

      - name: start backend server
        working-directory: backend
        id: backend-start
        run: |
          nohup php artisan serve > phpd.log 2>&1 &
          echo "PHP_BACKEND_SERVER_PID=$!" >> $GITHUB_ENV
      - name: install serve
        run: npm install -g serve

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: frontend
          start: serve -s build
          build: npm run build
          wait-on: 'http://localhost:3000'
        env:
          REACT_APP_CLIENT_ID: 2
          REACT_APP_CLIENT_SECRET: '${{env.CLIENT_SECRET}}'
          REACT_APP_API: 'http://localhost:8000/'
          CYPRESS_VIDEO: false
      - name: added logs as artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: logs
          path: |
            backend/phpd.log
            backend/storage/logs/
            backend/passport_keys.log
            frontend/cypress/screenshots
            frontend/cypress/logs
      - name: stop backend server
        if: steps.backend-start.success()
        working-directory: backend
        run: |
          kill -3 $PHP_BACKEND_SERVER_PID
          
          